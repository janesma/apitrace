From f38d4b5d64469b0faee7bea540d6b9459834e896 Mon Sep 17 00:00:00 2001
From: Mark Janes <mark.a.janes@intel.com>
Date: Mon, 8 Apr 2019 13:02:31 -0700
Subject: [PATCH] i965/batch: unconditionally allocate DEBUG_BATCH hash tables

FrameRetrace instruments DEBUG_BATCH on a per-frame basis, but the
associated data structure must be created in advance of toggling output.
---
 src/intel/dev/gen_debug.h                     | 3 ++-
 src/mesa/drivers/dri/i965/intel_batchbuffer.c | 4 ++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/intel/dev/gen_debug.h b/src/intel/dev/gen_debug.h
index e4dabc67f8d..c30d5f7cba4 100644
--- a/src/intel/dev/gen_debug.h
+++ b/src/intel/dev/gen_debug.h
@@ -39,7 +39,8 @@ extern "C" {
  * list of debugging flags, as well as some macros for handling them.
  */
 
-extern uint64_t INTEL_DEBUG;
+// extern uint64_t INTEL_DEBUG;
+extern uint64_t __attribute__((visibility ("default"))) INTEL_DEBUG;
 
 #define DEBUG_TEXTURE             (1ull <<  0)
 #define DEBUG_STATE               (1ull <<  1)
diff --git a/src/mesa/drivers/dri/i965/intel_batchbuffer.c b/src/mesa/drivers/dri/i965/intel_batchbuffer.c
index a701f3bd353..40cf897d788 100644
--- a/src/mesa/drivers/dri/i965/intel_batchbuffer.c
+++ b/src/mesa/drivers/dri/i965/intel_batchbuffer.c
@@ -156,7 +156,7 @@ intel_batchbuffer_init(struct brw_context *brw)
    batch->validation_list =
       malloc(batch->exec_array_size * sizeof(batch->validation_list[0]));
 
-   if (INTEL_DEBUG & DEBUG_BATCH) {
+   /* if (INTEL_DEBUG & DEBUG_BATCH) { */
       batch->state_batch_sizes =
          _mesa_hash_table_create(NULL, uint_key_hash, uint_key_compare);
 
@@ -170,7 +170,7 @@ intel_batchbuffer_init(struct brw_context *brw)
                                 decode_flags, NULL, decode_get_bo,
                                 decode_get_state_size, brw);
       batch->decoder.max_vbo_decoded_lines = 100;
-   }
+   /* } */
 
    batch->use_batch_first =
       screen->kernel_features & KERNEL_ALLOWS_EXEC_BATCH_FIRST;
-- 
2.20.1

